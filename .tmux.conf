# SET OPTION
# Prefix
set-option -g prefix M-a
unbind-key C-b
bind-key M-a send-prefix

# Use 256 colors
set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"

set -sg repeat-time 600                     # increase repeat timeout
set -g renumber-windows on                  # renumber windows when a window is closed
set -g set-titles on                        # set terminal title
# set -g set-titles-string '#h ❐ #S ● #I #W'
set -g status-interval 10                   # redraw status line every 10 seconds
# set -g monitor-activity on
# set -g visual-activity on
set -g mouse on                             # Mouse support 
set-window-option -g mode-keys vi           # vim keys in copy mode
# set -g pane-border-bg '#1d2325'
# set -g pane-active-border-bg '#ffffff'

setw -q -g utf8 on
setw -g pane-base-index 1                   # make pane numbering consistent with windows
setw -g automatic-rename on                 # rename window to reflect current program
setw -g mode-keys vi

set-option -sg escape-time 0                # faster command sequences
set-option -g status-position bottom        # status bar (top/bottom)

# bg and fg color for active and inactive panes 
# set -g window-style 'bg=#1d2021'
# set -g window-active-style 'bg=#1d2021'
# KeyBindings
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n m-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n m-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n m-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n m-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n m-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi m-h select-pane -L
bind-key -T copy-mode-vi m-j select-pane -D
bind-key -T copy-mode-vi m-k select-pane -U
bind-key -T copy-mode-vi m-l select-pane -R
bind-key -T copy-mode-vi m-\ select-pane -l

# Tmux copy and paste
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -n m-Escape copy-mode		     # enter copy mode; default [
bind-key p paste-buffer		             # paste; default ]
bind-key P choose-buffer 	             # tmux clipboard history

###***WINDOW NAVIGATION***###
bind-key -n M-0 select-window -t :=0
bind-key -n M-1 select-window -t :=1
bind-key -n M-2 select-window -t :=2
bind-key -n M-3 select-window -t :=3
bind-key -n M-4 select-window -t :=4
bind-key -n M-5 select-window -t :=5
bind-key -n M-s switch-client -l
bind-key -n M-Tab last-window               # move to last active window

# Cycle windows (no prefix)
unbind n
bind-key -n M-\; select-window -p           # previous window
bind-key -n M-n select-window -n            # next window
bind-key -n M-m new-window                  # New window without prefix
bind-key i confirm kill-window

###***PANE NAVIGATION***###
bind-key -n M-q kill-pane 
bind-key -n M-f resize-pane -Z              # Fullscreen 

bind-key -n M-"'" split-window -h           # Vertical Split
bind-key -n M-'/' split-window -v           # Horizontal Split

# Pane Resize
bind -n M-Y resize-pane -L 5
bind -n M-U resize-pane -D 5
bind -n M-I resize-pane -U 5
bind -n M-O resize-pane -R 5
# External Commands (Tmux copy mode)
bind-key -T copy-mode-vi 'o' send-keys -X copy-selection \; new-window -n duck \; send-keys -t duck 'sr duckduckgo "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'O' send-keys -X copy-selection \; new-window -n w3m \; send-keys -t w3m 'w3m "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'i' send-keys -X copy-selection \; new-window -n imagegoogle \; send-keys -t imagegoogle 'sr imagesgoogle "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'a' send-keys -X copy-selection \; new-window -n ArchWiki \; send-keys -t ArchWiki 'sr archwiki "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'u' send-keys -X copy-selection \; new-window -n youtube \; send-keys -t youtube 'mpsyt /"$(tmux show-buffer)" && tmux kill-window' 'Enter'

# Status bar theme
set-option -g status-position top
setw -g pane-border-format '─'
set -g status-bg 'colour235'
set -g message-command-fg 'colour222'
set -g status-justify 'centre'
set -g status-left-length '100'
set -g status 'on'
set -g pane-active-border-fg '#ff00ff'
set -g message-bg 'colour238'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g message-fg 'colour222'
set -g message-command-bg 'colour238'
set -g status-attr 'none'
# set -g status-utf8 'on'
set -g pane-border-fg '#1d2325'
set -g status-left-attr 'none'
setw -g window-status-fg 'colour121'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour235'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour154'
setw -g window-status-separator ''
setw -g window-status-bg 'colour235'
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics] #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #(rainbarf --battery --remaining --no-rgb) '
setw -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I  #W  #F #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'
# Plugin Manager
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @resurrect-processes 'w3m ncmpcpp ranger'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
